import { GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import LoadingPage from "~/components/LoadingPage";
import Nav from "~/components/Nav";
import ProductData from "~/components/ProductData";

const SingleProductPage: NextPage<{ productId: string }> = ({ productId }) => {
  const { data, isLoading: productsLoading } =
    api.products.getProductById.useQuery({ productId });

  // Not needed bc getStaticProps and getStaticPaths
  //   if (userLoading) return <div>Loading...</div>;

  if (!data) return <div>404</div>;

  // console.log(productId);
  console.log(data);

  // Return empty div if user isn't loaded yet
  if (productsLoading) return <div />;

  // const [scope, animate] = useAnimate();

  return (
    <>
      <Head>
        <title>Shop</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen flex-col justify-between">
        <Nav />

        <section className="flex flex-col justify-center p-12">
          {/* <Feed /> */}

          <div className="pb-12 text-center">
            <h3 className="text-2xl tracking-widest md:text-3xl">
              {data.title}
            </h3>
          </div>

          {/* desktop */}
          <div className="flex flex-col items-center justify-between gap-12 md:flex-row md:gap-0">
            <div className="h-fit overflow-hidden rounded-xl">
              <Image
                src="https://images.unsplash.com/photo-1523381210434-271e8be1f52b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80"
                alt=""
                width={500}
                height={380}
                className="h-[380] w-[500] object-contain"
              />
            </div>

            {/* Product data */}
            <ProductData data={data} />
          </div>
        </section>
        <Footer />
      </main>
    </>
  );
};

import { createServerSideHelpers } from "@trpc/react-query/server";
import { appRouter } from "~/server/api/root";
import superjson from "superjson";
import { prisma } from "~/server/db";
import Footer from "~/components/Footer";
import { stripe } from "~/server/stripe/client";

export const getStaticProps: GetStaticProps = async (context) => {
  const helpers = createServerSideHelpers({
    router: appRouter,
    ctx: { prisma, currentUserId: null, stripe },
    transformer: superjson, // optional - adds superjson serialization
  });

  const id = context.params?.id;

  // console.log("ID", id);

  if (typeof id !== "string") throw new Error("No slug");

  await helpers.productId.getProductById.prefetch({ productId: id });

  return {
    props: {
      trpcState: helpers.dehydrate(),
      productId: id,
    },
  };
};

export const getStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};

export default SingleProductPage;
